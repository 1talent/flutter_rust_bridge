name: Flutter integration test for Flutter+Rust

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  # ref https://medium.com/flutter-community/run-flutter-driver-tests-on-github-actions-13c639c7e4ab
  ios:
    runs-on: macOS-latest

    strategy:
      matrix:
        device:
          - "iPad (7th generation) (14.4)"
          - "iPhone 12 Pro Max (14.4)"
      fail-fast: false

    steps:
      - name: "List all simulators"
        run: "xcrun instruments -s"
      - name: "Start Simulator"
        run: |
          UDID=$(
            xcrun instruments -s |
            awk \
              -F ' *[][]' \
              -v 'device=${{ matrix.device }}' \
              '$1 == device { print $2 }'
          )
          xcrun simctl boot "${UDID:?No Simulator with this name found}"

      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'

      - uses: actions/checkout@v2

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - name: Install cargo lipo
        run: cargo install cargo-lipo && rustup target add aarch64-apple-ios x86_64-apple-ios

      - name: Install Flutter dependencies
        working-directory: ./frb_example/with_flutter
        run: flutter pub get

      - name: Build Rust lib
        working-directory: ./frb_example/with_flutter/rust
        # note the "-i '' -e" is a bug of sed specific to MacOS https://stackoverflow.com/questions/19456518
        run: |
          sed -i '' -e 's/"cdylib"/"staticlib"/g' Cargo.toml
          cargo lipo
          cp target/universal/debug/libflutter_rust_bridge_example.a ../ios/Runner

      - name: Run Flutter integration tests
        working-directory: ./frb_example/with_flutter
        run: flutter test integration_test/main.dart --verbose

  # ref https://betterprogramming.pub/test-flutter-apps-on-android-with-github-actions-abdba2137b4
  android:
    runs-on: macOS-latest # "betterprogramming.pub" says must be macOS

    strategy:
      matrix:
        device:
          - "pixel"
          - "Nexus 6"
      fail-fast: false

    steps:
      - uses: actions/checkout@v2

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'

      - uses: actions/setup-java@v1
        with:
          java-version: '8.x' # "betterprogramming.pub" says must be java "8"

      - name: Install cargo ndk
        run: cargo install cargo-ndk && rustup target add aarch64-linux-android armv7-linux-androideabi x86_64-linux-android i686-linux-android

      - name: Install Flutter dependencies
        working-directory: ./frb_example/with_flutter
        run: flutter pub get

      - name: Build Rust lib
        working-directory: ./frb_example/with_flutter/rust
        # NOTE since run on simulator, need -t to be x86_64. For real devices, of course arm-like ones.
        run: cargo ndk -t x86_64 -o ../android/app/src/main/jniLibs build && ls -al ../android/app/src/main/jniLibs

      - name: Run Flutter integration tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          script: |
            cd frb_example/with_flutter && flutter test integration_test/main.dart --verbose