name: Linters

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]

jobs:
  rust_linter:
    name: Rust linter using Clippy and rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt, clippy

      - name: Run fmt for codegen
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --manifest-path=./frb_codegen/Cargo.toml --all -- --check
      - name: Run clippy for codegen
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --manifest-path=./frb_codegen/Cargo.toml -- -D warnings

      - name: Run fmt for rust runtime
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --manifest-path=./frb_rust/Cargo.toml --all -- --check
      - name: Run clippy for rust runtime
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --manifest-path=./frb_rust/Cargo.toml -- -D warnings

      - name: Run fmt for pure_dart example
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --manifest-path=./frb_example/pure_dart/rust/Cargo.toml --all -- --check
      - name: Run clippy for pure_dart example
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --manifest-path=./frb_example/pure_dart/rust/Cargo.toml -- -D warnings

      - name: Run fmt for with_flutter example
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --manifest-path=./frb_example/with_flutter/rust/Cargo.toml --all -- --check
      - name: Run clippy for with_flutter example
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --manifest-path=./frb_example/with_flutter/rust/Cargo.toml -- -D warnings

  dart_linter:
    name: Dart linter using analyze and format

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # Note: This workflow uses the latest stable version of the Dart SDK.
      # You can specify other versions if desired, see documentation here:
      # https://github.com/dart-lang/setup-dart/blob/main/README.md
      # - uses: dart-lang/setup-dart@v1
      - uses: dart-lang/setup-dart@9a04e6d73cca37bd455e0608d7e5092f881fd603

      - name: Install dependencies for dart runtime
        working-directory: ./frb_dart
        run: dart pub get
      - name: Verify formatting for dart runtime
        working-directory: ./frb_dart
        run: dart format --output=none --set-exit-if-changed --line-length 120 .
      - name: Analyze project source for dart runtime
        working-directory: ./frb_dart
        run: dart analyze --fatal-infos

      - name: Install dependencies for pure_dart example
        working-directory: ./frb_example/pure_dart/dart
        run: dart pub get
      - name: Verify formatting for pure_dart example
        working-directory: ./frb_example/pure_dart/dart
        run: dart format --output=none --set-exit-if-changed --line-length 120 .
      - name: Analyze project source for pure_dart example
        working-directory: ./frb_example/pure_dart/dart
        run: dart analyze --fatal-infos

      - name: Install dependencies for with_flutter example
        working-directory: ./frb_example/with_flutter/dart
        run: dart pub get
      - name: Verify formatting for with_flutter example
        working-directory: ./frb_example/with_flutter/dart
        run: dart format --output=none --set-exit-if-changed --line-length 120 .
      - name: Analyze project source for with_flutter example
        working-directory: ./frb_example/with_flutter/dart
        run: dart analyze --fatal-infos

