// ignore_for_file: camel_case_types, non_constant_identifier_names, avoid_positional_boolean_parameters, annotate_overrides

// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
import 'dart:ffi' as ffi;

/// generated by flutter_rust_bridge
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';

class ExampleWire implements DartRustBridgeWireBase {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName) _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  ExampleWire(ffi.DynamicLibrary dynamicLibrary) : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  ExampleWire.fromLookup(ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName) lookup)
      : _lookup = lookup;

  void wire_draw_mandelbrot(
    int port,
    ffi.Pointer<wire_Size> image_size,
    ffi.Pointer<wire_Point> zoom_point,
    double scale,
    int num_threads,
  ) {
    return _wire_draw_mandelbrot(
      port,
      image_size,
      zoom_point,
      scale,
      num_threads,
    );
  }

  late final _wire_draw_mandelbrotPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Int64, ffi.Pointer<wire_Size>, ffi.Pointer<wire_Point>, ffi.Double,
              ffi.Int32)>>('wire_draw_mandelbrot');
  late final _wire_draw_mandelbrot = _wire_draw_mandelbrotPtr
      .asFunction<void Function(int, ffi.Pointer<wire_Size>, ffi.Pointer<wire_Point>, double, int)>();

  void wire_passing_complex_structs(
    int port,
    ffi.Pointer<wire_TreeNode> root,
  ) {
    return _wire_passing_complex_structs(
      port,
      root,
    );
  }

  late final _wire_passing_complex_structsPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<wire_TreeNode>)>>(
          'wire_passing_complex_structs');
  late final _wire_passing_complex_structs =
      _wire_passing_complex_structsPtr.asFunction<void Function(int, ffi.Pointer<wire_TreeNode>)>();

  void wire_memory_test_utility_input_array(
    int port,
    ffi.Pointer<wire_uint_8_list> input,
  ) {
    return _wire_memory_test_utility_input_array(
      port,
      input,
    );
  }

  late final _wire_memory_test_utility_input_arrayPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<wire_uint_8_list>)>>(
          'wire_memory_test_utility_input_array');
  late final _wire_memory_test_utility_input_array =
      _wire_memory_test_utility_input_arrayPtr.asFunction<void Function(int, ffi.Pointer<wire_uint_8_list>)>();

  void wire_memory_test_utility_output_zero_copy_buffer(
    int port,
    int len,
  ) {
    return _wire_memory_test_utility_output_zero_copy_buffer(
      port,
      len,
    );
  }

  late final _wire_memory_test_utility_output_zero_copy_bufferPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
          'wire_memory_test_utility_output_zero_copy_buffer');
  late final _wire_memory_test_utility_output_zero_copy_buffer =
      _wire_memory_test_utility_output_zero_copy_bufferPtr.asFunction<void Function(int, int)>();

  void wire_memory_test_utility_output_vec_u8(
    int port,
    int len,
  ) {
    return _wire_memory_test_utility_output_vec_u8(
      port,
      len,
    );
  }

  late final _wire_memory_test_utility_output_vec_u8Ptr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>('wire_memory_test_utility_output_vec_u8');
  late final _wire_memory_test_utility_output_vec_u8 =
      _wire_memory_test_utility_output_vec_u8Ptr.asFunction<void Function(int, int)>();

  void wire_memory_test_utility_input_vec_of_object(
    int port,
    ffi.Pointer<wire_list_size> input,
  ) {
    return _wire_memory_test_utility_input_vec_of_object(
      port,
      input,
    );
  }

  late final _wire_memory_test_utility_input_vec_of_objectPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<wire_list_size>)>>(
          'wire_memory_test_utility_input_vec_of_object');
  late final _wire_memory_test_utility_input_vec_of_object =
      _wire_memory_test_utility_input_vec_of_objectPtr.asFunction<void Function(int, ffi.Pointer<wire_list_size>)>();

  void wire_memory_test_utility_output_vec_of_object(
    int port,
    int len,
  ) {
    return _wire_memory_test_utility_output_vec_of_object(
      port,
      len,
    );
  }

  late final _wire_memory_test_utility_output_vec_of_objectPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
          'wire_memory_test_utility_output_vec_of_object');
  late final _wire_memory_test_utility_output_vec_of_object =
      _wire_memory_test_utility_output_vec_of_objectPtr.asFunction<void Function(int, int)>();

  void wire_memory_test_utility_input_complex_struct(
    int port,
    ffi.Pointer<wire_TreeNode> input,
  ) {
    return _wire_memory_test_utility_input_complex_struct(
      port,
      input,
    );
  }

  late final _wire_memory_test_utility_input_complex_structPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<wire_TreeNode>)>>(
          'wire_memory_test_utility_input_complex_struct');
  late final _wire_memory_test_utility_input_complex_struct =
      _wire_memory_test_utility_input_complex_structPtr.asFunction<void Function(int, ffi.Pointer<wire_TreeNode>)>();

  void wire_memory_test_utility_output_complex_struct(
    int port,
    int len,
  ) {
    return _wire_memory_test_utility_output_complex_struct(
      port,
      len,
    );
  }

  late final _wire_memory_test_utility_output_complex_structPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
          'wire_memory_test_utility_output_complex_struct');
  late final _wire_memory_test_utility_output_complex_struct =
      _wire_memory_test_utility_output_complex_structPtr.asFunction<void Function(int, int)>();

  ffi.Pointer<wire_Size> new_box_autoadd_size() {
    return _new_box_autoadd_size();
  }

  late final _new_box_autoadd_sizePtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_Size> Function()>>('new_box_autoadd_size');
  late final _new_box_autoadd_size = _new_box_autoadd_sizePtr.asFunction<ffi.Pointer<wire_Size> Function()>();

  ffi.Pointer<wire_Point> new_box_autoadd_point() {
    return _new_box_autoadd_point();
  }

  late final _new_box_autoadd_pointPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_Point> Function()>>('new_box_autoadd_point');
  late final _new_box_autoadd_point = _new_box_autoadd_pointPtr.asFunction<ffi.Pointer<wire_Point> Function()>();

  ffi.Pointer<wire_uint_8_list> new_uint_8_list(
    int len,
  ) {
    return _new_uint_8_list(
      len,
    );
  }

  late final _new_uint_8_listPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_uint_8_list> Function(ffi.Int32)>>('new_uint_8_list');
  late final _new_uint_8_list = _new_uint_8_listPtr.asFunction<ffi.Pointer<wire_uint_8_list> Function(int)>();

  ffi.Pointer<wire_TreeNode> new_box_autoadd_tree_node() {
    return _new_box_autoadd_tree_node();
  }

  late final _new_box_autoadd_tree_nodePtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_TreeNode> Function()>>('new_box_autoadd_tree_node');
  late final _new_box_autoadd_tree_node =
      _new_box_autoadd_tree_nodePtr.asFunction<ffi.Pointer<wire_TreeNode> Function()>();

  ffi.Pointer<wire_list_tree_node> new_list_tree_node(
    int len,
  ) {
    return _new_list_tree_node(
      len,
    );
  }

  late final _new_list_tree_nodePtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_list_tree_node> Function(ffi.Int32)>>('new_list_tree_node');
  late final _new_list_tree_node = _new_list_tree_nodePtr.asFunction<ffi.Pointer<wire_list_tree_node> Function(int)>();

  ffi.Pointer<wire_list_size> new_list_size(
    int len,
  ) {
    return _new_list_size(
      len,
    );
  }

  late final _new_list_sizePtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_list_size> Function(ffi.Int32)>>('new_list_size');
  late final _new_list_size = _new_list_sizePtr.asFunction<ffi.Pointer<wire_list_size> Function(int)>();

  void store_dart_post_cobject(
    DartPostCObjectFnType ptr,
  ) {
    return _store_dart_post_cobject(
      ptr,
    );
  }

  late final _store_dart_post_cobjectPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(DartPostCObjectFnType)>>('store_dart_post_cobject');
  late final _store_dart_post_cobject = _store_dart_post_cobjectPtr.asFunction<void Function(DartPostCObjectFnType)>();
}

class wire_Size extends ffi.Struct {
  @ffi.Int32()
  external int width;

  @ffi.Int32()
  external int height;
}

class wire_Point extends ffi.Struct {
  @ffi.Double()
  external double x;

  @ffi.Double()
  external double y;
}

class wire_uint_8_list extends ffi.Struct {
  external ffi.Pointer<ffi.Uint8> ptr;

  @ffi.Int32()
  external int len;
}

class wire_list_tree_node extends ffi.Struct {
  external ffi.Pointer<wire_TreeNode> ptr;

  @ffi.Int32()
  external int len;
}

class wire_TreeNode extends ffi.Struct {
  external ffi.Pointer<wire_uint_8_list> name;

  external ffi.Pointer<wire_list_tree_node> children;
}

class wire_list_size extends ffi.Struct {
  external ffi.Pointer<wire_Size> ptr;

  @ffi.Int32()
  external int len;
}

typedef DartPostCObjectFnType = ffi.Pointer<ffi.NativeFunction<ffi.Uint8 Function(DartPort, ffi.Pointer<ffi.Void>)>>;
typedef DartPort = ffi.Int64;
